{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Meredith\\\\Documents\\\\halloween hackathon\\\\css-colour-palette\\\\src\\\\components\\\\App\\\\index.js\";\nimport React from \"react\";\nimport logo from \"./title.png\";\nimport \"./App.css\";\nimport { FirebaseContext } from \"../firebase\"; //import { Component } from './colour-picker';\n\nimport { SketchPicker } from \"react-color\";\n\nclass colourPicker extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      background: \"#fff\" //default colour. this will be the colour from css file\n      //displayColorPicker: false,\n\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    this.handleChangeComplete = color => {\n      this.setState({\n        background: color.hex\n      }); //update the colour when done picking\n    };\n  }\n\n  handleChange(color, event) {\n    // update colour whenever change made (eg when you drag to select a colour)\n    this.setState({\n      background: color.hex\n    });\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>\n      //   <button onClick={this.handleClick}>Pick Color</button>\n      //   {this.state.displayColorPicker ? (\n      //      <div style={popover}>\n      //       <div style={cover} onClick={this.handleClose} />\n      //        <SketchPicker />\n      //     </div>\n      //    ) : null}\n      //  </div>\n      _jsxDEV(SketchPicker, {\n        color: this.state.background,\n        onChange: this.handleChange,\n        onChangeComplete: this.handleChangeComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    );\n  }\n\n}\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"App\",\n  children: [/*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: [\"[// Draw the logo]\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \"[// Make connection w/ firebase via the context]\", /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n      children: firebase => {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"App-title\",\n          children: \"Connection to firebase succesful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Pick Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n        color: this.state.background,\n        onChange: this.handleChange,\n        onChangeComplete: this.handleChangeComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App; //export class colourPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Meredith/Documents/halloween hackathon/css-colour-palette/src/components/App/index.js"],"names":["React","logo","FirebaseContext","SketchPicker","colourPicker","Component","state","background","handleClick","setState","displayColorPicker","handleClose","handleChangeComplete","color","hex","handleChange","event","render","App","firebase"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,WAAP;AACA,SAASC,eAAT,QAAgC,aAAhC,C,CACA;;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACNC,MAAAA,UAAU,EAAE,MADN,CACc;AACpB;;AAFM,KADiC;;AAAA,SAKzCC,WALyC,GAK3B,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,kBAAkB,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAlC,OAAd;AACD,KAPwC;;AAAA,SASzCC,WATyC,GAS3B,MAAM;AAClB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD,KAXwC;;AAAA,SAazCE,oBAbyC,GAajBC,KAAD,IAAW;AAChC,WAAKJ,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAEM,KAAK,CAACC;AAApB,OAAd,EADgC,CACU;AAC3C,KAfwC;AAAA;;AAgBzCC,EAAAA,YAAY,CAACF,KAAD,EAAQG,KAAR,EAAe;AACzB;AACA,SAAKP,QAAL,CAAc;AAAEF,MAAAA,UAAU,EAAEM,KAAK,CAACC;AAApB,KAAd;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP;AAAA;AACC;AACA;AACA;AACD;AACC;AACD;AACC;AACD;AACA;AAEI,cAAC,YAAD;AACA,QAAA,KAAK,EAAK,KAAKX,KAAL,CAAWC,UADrB;AAEA,QAAA,QAAQ,EAAG,KAAKQ,YAFhB;AAGA,QAAA,gBAAgB,EAAG,KAAKH;AAHxB;AAAA;AAAA;AAAA;AAAA;AAXJ;AAiBD;;AAtCwC;;AAyC3C,MAAMM,GAAG,GAAG,mBACV;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA,0BACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA,kDAEE;AAAK,MAAA,GAAG,EAAEjB,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFF,mEAIE,QAAC,eAAD,CAAiB,QAAjB;AAAA,gBACIkB,QAAD,IAAc;AACb,4BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;AALH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAaE;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKX,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AACA,QAAA,KAAK,EAAK,KAAKF,KAAL,CAAWC,UADrB;AAEA,QAAA,QAAQ,EAAG,KAAKQ,YAFhB;AAGA,QAAA,gBAAgB,EAAG,KAAKH;AAHxB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAbF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMM,G;AA2BN,eAAeA,GAAf,C,CACA","sourcesContent":["import React from \"react\";\r\nimport logo from \"./title.png\";\r\nimport \"./App.css\";\r\nimport { FirebaseContext } from \"../firebase\";\r\n//import { Component } from './colour-picker';\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nclass colourPicker extends React.Component {\r\n  state = {\r\n    background: \"#fff\", //default colour. this will be the colour from css file\r\n    //displayColorPicker: false,\r\n  };\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false });\r\n  };\r\n\r\n  handleChangeComplete = (color) => {\r\n    this.setState({ background: color.hex }); //update the colour when done picking\r\n  };\r\n  handleChange(color, event) {\r\n    // update colour whenever change made (eg when you drag to select a colour)\r\n    this.setState({ background: color.hex });\r\n  }\r\n  render() {\r\n    return (\r\n     // <div>\r\n     //   <button onClick={this.handleClick}>Pick Color</button>\r\n     //   {this.state.displayColorPicker ? (\r\n    //      <div style={popover}>\r\n     //       <div style={cover} onClick={this.handleClose} />\r\n    //        <SketchPicker />\r\n     //     </div>\r\n    //    ) : null}\r\n    //  </div>\r\n\r\n        <SketchPicker\r\n        color = { this.state.background }\r\n        onChange={ this.handleChange }\r\n        onChangeComplete={ this.handleChangeComplete }\r\n         />\r\n    );\r\n  }\r\n}\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      [// Draw the logo]\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      [// Make connection w/ firebase via the context]\r\n      <FirebaseContext.Consumer>\r\n        {(firebase) => {\r\n          return (\r\n            <h2 className=\"App-title\">Connection to firebase succesful!</h2>\r\n          );\r\n        }}\r\n      </FirebaseContext.Consumer>\r\n    </header>\r\n    <body>\r\n        <div id=\"root\">\r\n            <button onClick={this.handleClick}>Pick Color</button>\r\n            <SketchPicker \r\n            color = { this.state.background }\r\n            onChange={ this.handleChange }\r\n            onChangeComplete={ this.handleChangeComplete }/>\r\n         </div>\r\n    </body>\r\n    \r\n  </div>\r\n);\r\n\r\nexport default App;\r\n//export class colourPicker;\r\n"]},"metadata":{},"sourceType":"module"}