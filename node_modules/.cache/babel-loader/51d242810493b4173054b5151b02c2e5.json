{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Meredith\\\\Documents\\\\halloween hackathon\\\\css-colour-palette\\\\src\\\\components\\\\App\\\\index.js\";\nimport React from 'react';\nimport logo from './title.png';\nimport './App.css';\nimport { FirebaseContext } from '../firebase'; //import { Component } from './colour-picker';\n\nimport { SketchPicker } from 'react-color';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      background: '#fff',\n      //default colour. this will be the colour from css file\n      displayColorPicker: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    this.handleChangeComplete = color => {\n      this.setState({\n        background: color.hex\n      }); //update the colour when done picking\n    };\n  }\n\n  handleChange(color, event) {\n    // update colour whenever change made (eg when you drag to select a colour)\n    this.setState({\n      background: color.hex\n    });\n  }\n\n  render() {\n    const popover = {\n      position: 'absolute',\n      zIndex: '2'\n    };\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Pick Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), this.state.displayColorPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: popover,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: cover,\n          onClick: this.handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 43\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this) //  <colourPicker\n    //  color = { this.state.background }\n    //  onChange={ this.handleChange }\n    //  onChangeComplete={ this.handleChangeComplete }\n    //   />\n    ;\n  }\n\n}\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"App\",\n  children: [/*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: [\"[// Draw the logo]\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), \"[// Make connection w/ firebase via the context]\", /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n      children: firebase => {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"App-title\",\n          children: \"Connection to firebase succesful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 28\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this), Component.render]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 5\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Meredith/Documents/halloween hackathon/css-colour-palette/src/components/App/index.js"],"names":["React","logo","FirebaseContext","SketchPicker","Component","state","background","displayColorPicker","handleClick","setState","handleClose","handleChangeComplete","color","hex","handleChange","event","render","popover","position","zIndex","cover","top","right","bottom","left","App","firebase"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,WAAP;AACA,SAAUC,eAAV,QAAiC,aAAjC,C,CACA;;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,UAAU,EAAE,MADR;AACgB;AACpBC,MAAAA,kBAAkB,EAAE;AAFhB,KAF4B;;AAAA,SAMpCC,WANoC,GAMtB,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAAlC,OAAd;AACD,KARiC;;AAAA,SAUlCG,WAVkC,GAUpB,MAAM;AAClB,WAAKD,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD,KAZiC;;AAAA,SAepCI,oBAfoC,GAeZC,KAAD,IAAW;AAC9B,WAAKH,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEM,KAAK,CAACC;AAApB,OAAd,EAD8B,CACW;AAC5C,KAjBmC;AAAA;;AAkBpCC,EAAAA,YAAY,CAACF,KAAD,EAAQG,KAAR,EAAe;AACvB;AACA,SAAKN,QAAL,CAAc;AAAEH,MAAAA,UAAU,EAAEM,KAAK,CAACC;AAApB,KAAd;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAhB;AAIE,UAAMC,KAAK,GAAG;AACZF,MAAAA,QAAQ,EAAE,OADE;AAEZG,MAAAA,GAAG,EAAE,KAFO;AAGZC,MAAAA,KAAK,EAAE,KAHK;AAIZC,MAAAA,MAAM,EAAE,KAJI;AAKZC,MAAAA,IAAI,EAAE;AALM,KAAd;AAOF,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAG,KAAKhB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEF,KAAKH,KAAL,CAAWE,kBAAX,gBAAgC;AAAK,QAAA,KAAK,EAAGU,OAAb;AAAA,gCAChC;AAAK,UAAA,KAAK,EAAGG,KAAb;AAAqB,UAAA,OAAO,EAAG,KAAKV;AAApC;AAAA;AAAA;AAAA;AAAA,gBADgC,eAEhC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFgC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAGO,IALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CASF;AACA;AACA;AACA;AACD;AAbG;AAeH;;AAjDmC;;AAoDxC,MAAMe,GAAG,GAAG,mBAER;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA,0BACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA,kDAGI;AAAK,MAAA,GAAG,EAAExB,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHJ,mEAMI,QAAC,eAAD,CAAiB,QAAjB;AAAA,gBACKyB,QAAQ,IAAI;AACT,4BAAO;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAaKtB,SAAS,CAACY,MAbf;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;;KAAMS,G;AAmBN,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport logo from './title.png';\r\nimport './App.css';\r\nimport  { FirebaseContext } from '../firebase';\r\n//import { Component } from './colour-picker';\r\nimport { SketchPicker } from 'react-color'\r\n\r\nclass Component extends React.Component {\r\n\r\n    state = {\r\n        background: '#fff', //default colour. this will be the colour from css file\r\n        displayColorPicker: false,\r\n    };\r\n    handleClick = () => {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n      };\r\n    \r\n      handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n      };\r\n    \r\n\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex}); //update the colour when done picking\r\n    };\r\n    handleChange(color, event) {\r\n        // update colour whenever change made (eg when you drag to select a colour)\r\n        this.setState({ background: color.hex});\r\n    }\r\n    render() {\r\n        const popover = {\r\n            position: 'absolute',\r\n            zIndex: '2',\r\n          }\r\n          const cover = {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            right: '0px',\r\n            bottom: '0px',\r\n            left: '0px',\r\n          }\r\n        return (\r\n            <div>\r\n                <button onClick={ this.handleClick }>Pick Color</button>\r\n        { this.state.displayColorPicker ? <div style={ popover }>\r\n          <div style={ cover } onClick={ this.handleClose }/>\r\n          <SketchPicker />\r\n        </div> : null }\r\n      </div>\r\n           \r\n      //  <colourPicker\r\n      //  color = { this.state.background }\r\n      //  onChange={ this.handleChange }\r\n      //  onChangeComplete={ this.handleChangeComplete }\r\n     //   />\r\n        ) \r\n    }\r\n}\r\n\r\nconst App = () => (\r\n\r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n\r\n            [// Draw the logo]\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n            \r\n            [// Make connection w/ firebase via the context]\r\n            <FirebaseContext.Consumer>\r\n                {firebase => {\r\n                    return <h2 className=\"App-title\">Connection to firebase succesful!</h2>;\r\n                }}\r\n            </FirebaseContext.Consumer>\r\n        </header>\r\n        {Component.render}\r\n    </div>\r\n);\r\n \r\nexport default App;"]},"metadata":{},"sourceType":"module"}